/*
주사위 게임 3
문제 설명
1부터 6까지 숫자가 적힌 주사위가 네 개 있습니다. 네 주사위를 굴렸을 때 나온 숫자에 따라 다음과 같은 점수를 얻습니다.

네 주사위에서 나온 숫자가 모두 p로 같다면 1111 × p점을 얻습니다.
세 주사위에서 나온 숫자가 p로 같고 나머지 다른 주사위에서 나온 숫자가 q(p ≠ q)라면 (10 × p + q)2 점을 얻습니다.
주사위가 두 개씩 같은 값이 나오고, 나온 숫자를 각각 p, q(p ≠ q)라고 한다면 (p + q) × |p - q|점을 얻습니다.
어느 두 주사위에서 나온 숫자가 p로 같고 나머지 두 주사위에서 나온 숫자가 각각 p와 다른 q, r(q ≠ r)이라면 q × r점을 얻습니다.
네 주사위에 적힌 숫자가 모두 다르다면 나온 숫자 중 가장 작은 숫자 만큼의 점수를 얻습니다.
네 주사위를 굴렸을 때 나온 숫자가 정수 매개변수 a, b, c, d로 주어질 때, 얻는 점수를 return 하는 solution 함수를 작성해 주세요.
*/

//내 코드
class Solution {
    public int solution(int a, int b, int c, int d) {
        int answer = 0;
        
        if (a==b && a==c && a==d && b==c && b==d && c==d)
            answer = 1111*a;
        
        if (a==b && b==c && d!=a)
            answer = (10*a+d)*(10*a+d);
        else if (a==b && b==d && c!=a)
            answer = (10*a+c)*(10*a+c);
        else if (a==c && c==d && b!=a)
            answer = (10*a+b)*(10*a+b);
        else if (b==c && c==d && a!=b)
            answer = (10*b+a)*(10*b+a);
        
        if (a==b && c==d && a!=c && b!=d)
            answer = (a+c)*(Math.abs(a-c));
        else if (a==c && b==d && a!=b && c!=d)
            answer = (a+b)*(Math.abs(a-b));
        else if (a==d && b==c && a!=b && d!=c)
            answer = (a+b)*(Math.abs(a-b));
        
        if (a==b && a!=c && a!=d && b!=c && b!=d && c!=d)
            answer = c*d;
        else if (a==c && a!=b && a!=d && c!=b && c!=d && b!=d)
            answer = b*d;
        else if (a==d && a!=b && a!=c && d!=b && d!=c && b!=c)
            answer = b*c;
        else if (b==c && b!=a && b!=d && c!=a && c!=d && a!=d)
            answer = a*d;
        else if (b==d && b!=a && b!=c && d!=a && d!= c && a!=c)
            answer = a*c;
        else if (c==d && c!=a && c!=b && d!=a && d!=b && a!=b)
            answer = a*b;
        
        if(a!=b && a!=c && a!=d && b!=c && b!=d && c!=d){
            int min=a;
            if(min>b)
                min=b;
            if(min>c)
                min=c;
            if(min>d)
                min=d;
            answer = min;
        }
        return answer;
    }
}

//다른 사람의 풀이 1
import java.util.Arrays;

class Solution {
    public int solution(int a, int b, int c, int d) {

        int[] dice = { a, b, c, d };
        Arrays.sort(dice);

        int ans = 0;

        if (dice[0] == dice[3]) {
            ans = 1111 * dice[3];
        } else if (dice[0] == dice[2] || dice[1] == dice[3]) {
            ans = (int) Math.pow(dice[1] * 10 + (dice[0] + dice[3] - dice[1]), 2);
        } else if (dice[0] == dice[1] && dice[2] == dice[3]) {
            ans = (dice[0] + dice[3]) * (dice[3] - dice[0]);
        } else if (dice[0] == dice[1]) {
            ans = dice[2] * dice[3];
        } else if (dice[1] == dice[2]) {
            ans = dice[0] * dice[3];
        } else if (dice[2] == dice[3]) {
            ans = dice[0] * dice[1];
        } else {
            ans = dice[0];
        }

        return ans;
    }
}

// 다른 사람의 풀이 2
class Solution {
    public int solution(int a, int b, int c, int d) {
        if(a == b && b==c && c==d) {
            return 1111 * a;
        }
        if(a==b && b==c) {
            return triple(a,d);
        }
        if(a==b && b==d){
            return triple(a,c);
        }
        if(b==c && c==d) {
            return triple(b,a);
        }
        if(a==c && c==d) {
            return triple(a,b);
        }
        if(a==b && c==d) {
            return double1(a,c);
        }
        if(a==c && b==d) {
            return double1(a,b);
        }
        if(a==d && b==c) {
            return double1(a,b);
        }
        if(a==b) 
            return double2(c,d);
        if(a==c)
            return double2(b,d);
        if(a==d)
            return double2(b,c);
        if(b==c)
            return double2(a,d);
        if(b==d)
            return double2(a,c);
        if(c==d)
            return double2(a,b);
        return Math.min(Math.min(a,b), Math.min(c,d));
    }

    private int double2(int q, int r) {
        return q * r;
    }

    private int double1(int p, int q) {
        return (p+q) * Math.abs(p-q);
    }

    private int triple(int p, int q) {
        return (10 * p + q) * (10 * p + q);
    }
}

